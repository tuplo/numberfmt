import nf from '..';

describe('signal display', () => {
	it.each([
		['+0', 0, '0'],
		['+0', 1, '+1'],
		['+0', -1, '-1'],
		['-0', 0, '0'],
		['-0', 1, '1'],
		['-0', -1, '-1'],
		['(0)', 0, '0'],
		['(0)', 1, '1'],
		['(0)', -1, '(1)'],
		['+0,0', 1_000, '+1,000'],
		['+0,0', -1_000, '-1,000'],
		['-0,0', 1_000, '1,000'],
		['-0,0', -1_000, '-1,000'],
		['(0,0)', 1_000, '1,000'],
		['(0,0)', -1_000, '(1,000)'],
		['+0.00', 1.23, '+1.23'],
		['+0.00', -1.23, '-1.23'],
		['-0.00', 1.23, '1.23'],
		['-0.00', -1.23, '-1.23'],
		['(0.00)', 1.23, '1.23'],
		['(0.00)', -1.23, '(1.23)'],
	])('sign display: %s', (format, value, expected) => {
		const result = nf(value, format);
		expect(result).toBe(expected);
	});
});
