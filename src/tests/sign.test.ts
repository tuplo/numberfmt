import numberfmt from '..';

describe('signal display', () => {
  it.each([
    ['+0', 0, '0'],
    ['+0', 1, '+1'],
    ['+0', -1, '-1'],
    ['-0', 0, '0'],
    ['-0', 1, '1'],
    ['-0', -1, '-1'],
    ['(0)', 0, '0'],
    ['(0)', 1, '1'],
    ['(0)', -1, '(1)'],
    ['+0,0', 1000, '+1,000'],
    ['+0,0', -1000, '-1,000'],
    ['-0,0', 1000, '1,000'],
    ['-0,0', -1000, '-1,000'],
    ['(0,0)', 1000, '1,000'],
    ['(0,0)', -1000, '(1,000)'],
    ['+0.00', 1.23, '+1.23'],
    ['+0.00', -1.23, '-1.23'],
    ['-0.00', 1.23, '1.23'],
    ['-0.00', -1.23, '-1.23'],
    ['(0.00)', 1.23, '1.23'],
    ['(0.00)', -1.23, '(1.23)'],
  ])('sign display: %s', (format, value, expected) => {
    expect.assertions(1);
    const result = numberfmt(value, format);
    expect(result).toBe(expected);
  });
});
